import{d as y,c as l,a as s,b as d,t as _,w as k,e as g,f as C,g as i,s as j,E as f,_ as h,r as w,o as B,I as v,F as E,k as M,l as O}from"./index-BEaTRiqt.js";import{P as S}from"./index-kk8ZeESb.js";import{h as b}from"./request-D85rebqp.js";const $={listJobs:()=>b.get("/scheduler/listJobs"),cancelJob:u=>b.post("/scheduler/cancelJob",u)},P={class:"task-card"},R={class:"task-header"},q={class:"task-title"},D={class:"task-content"},F={class:"task-field"},L={class:"field-value"},V={class:"task-field"},z={class:"field-value"},G=y({__name:"TaskCard",props:{task:{}},emits:["taskCancelled"],setup(u,{emit:c}){const o=u,n=c,a=t=>{try{const e=JSON.parse(t),r=Object.keys(e);return r.length===1&&r[0]==="query"?e.query:t}catch{return t}},m=t=>{const{mode:e}=t;switch(e){case"FIXED":return`执行一次，运行时间：${t.fixedTime}`;case"SIMPLE":const r=t.startTime||"立即开始",x=t.endTime||"无限制",N=t.repeatInterval,J=p(t.repeatUnit),I=t.repeatCount===-1?"无限制":`${t.repeatCount}`;return`周期执行，开始时间：${r}，结束时间：${x}，周期：${N}${J}，最多运行次数：${I}`;case"CRON":return`CRON表达式：${t.cronExpression}`;default:return JSON.stringify(t)}},p=t=>({hour:"小时",minute:"分钟",second:"秒",milliSecond:"毫秒"})[t]||t,T=async()=>{try{await j.confirm(`确定要取消任务"${o.task.taskName}"吗？`,"确认取消",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await $.cancelJob({jobName:o.task.jobName,jobGroup:o.task.jobGroup}),f.success("任务取消成功"),n("taskCancelled")}catch(t){t!=="cancel"&&(console.error("取消任务失败:",t),f.error("取消任务失败"))}};return(t,e)=>{const r=C("el-button");return i(),l("div",P,[s("div",R,[s("div",q,[s("h3",null,_(t.task.taskName),1)]),d(r,{type:"danger",size:"small",onClick:T},{default:k(()=>[...e[0]||(e[0]=[g(" 取消任务 ",-1)])]),_:1})]),s("div",D,[s("div",F,[e[1]||(e[1]=s("label",null,"任务请求:",-1)),s("div",L,_(a(t.task.request)),1)]),s("div",V,[e[2]||(e[2]=s("label",null,"定时详情:",-1)),s("div",z,_(m(t.task.scheduler)),1)])])])}}}),U=h(G,[["__scopeId","data-v-87a6a4d6"]]),A={class:"scheduler-page"},H={class:"task-list-section"},X={class:"task-list"},K={key:0,class:"empty-state"},Q={key:1,class:"task-items"},W=y({__name:"index",setup(u){const c=w([]),o=async()=>{try{const n=await $.listJobs();c.value=n.data.list||[]}catch(n){console.error("加载定时任务失败:",n),f.error("加载定时任务失败")}};return B(()=>{o()}),(n,a)=>{const m=C("el-button");return i(),l("div",A,[d(S,{title:"定时任务管理",icon:"clock"},{actions:k(()=>[d(m,{type:"primary",onClick:o},{default:k(()=>[d(v,{name:"mdiRefresh"}),a[0]||(a[0]=g(" 刷新 ",-1))]),_:1})]),_:1}),s("div",H,[s("div",X,[c.value.length===0?(i(),l("div",K,[d(v,{name:"mdiClipboardList",size:"xlarge",class:"empty-icon"}),a[1]||(a[1]=s("h3",null,"暂无定时任务",-1)),a[2]||(a[2]=s("p",null,"当前没有找到符合条件的定时任务",-1))])):(i(),l("div",Q,[(i(!0),l(E,null,M(c.value,p=>(i(),O(U,{key:p.jobName,task:p,onTaskCancelled:o},null,8,["task"]))),128))]))])])])}}}),st=h(W,[["__scopeId","data-v-fddae972"]]);export{st as default};
